[["index.html", "QCBS R Workshop Series A template guide for the written material Preface", " QCBS R Workshop Series A template guide for the written material QCBS R Workshop Series1 2022-02-22 Preface This is a template book written in Markdown and its purpose is to serve as a basis for the QCBS R Workshop Series and to serve as a guide for developers and contributors willing to modify the written material. New changes are coming soon! The QCBS R Workshop Series is part of the Québec Centre for Biodiversity Science, and is maintained by the series coordinators and graduent student, postdoctoral, and research professional members. https://www.qcbs.ca↩︎ "],["basics.html", "Chapter 1 Bookdown basics 1.1 Organization 1.2 Cross-referencing 1.3 Code chunks 1.4 Figures and tables 1.5 Citations", " Chapter 1 Bookdown basics This material uses the bookdown package and was built based on ‘A Minimal Book Example’as well a excerpts and concepts from’bookdown: Authoring Books and Technical Documents with R Markdown’, as well as from other available online resources (especially, link). Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) 1.1 Organization Subsections can be created using pound signs (#): # First-level header (only for the title) ## Second-level header ### Third-level header The default use of the headers will produce numbers. This can be disabled using {-}after the header, e.g., ## Learning objectives {-}. 1.2 Cross-referencing You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter ?? using \\@ref(intro). If you do not manually label them, there will be automatic labels anyway, e.g., we can reference Chapter 1.5 using the name of the chapter: \\@(citations). 1.3 Code chunks R code can be embedded into the books like so: ```{r} library(palmerpenguins) penguins[1:2,] ``` Which yields: library(palmerpenguins) penguins[1:2,] ## # A tibble: 2 × 8 ## species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt; ## 1 Adelie Torge… 39.1 18.7 181 3750 male ## 2 Adelie Torge… 39.5 17.4 186 3800 fema… ## # … with 1 more variable: year &lt;int&gt; Please refrain from using multiple # signs when writing annotations inside the code chunks as this could be interpreted by Bookdown as a new header instead of an annotation. 1.3.1 Workshop script For participants who wish to have the code used during the workshop so that they can easily follow along, we will now automatically create a script using knitr::purl(). purl() will automatically extract the code from all the code chunks used in the book. If you consider that a particular code chunk should not be included in the final script, the purl=FALSE option can be used when creating the chunk. Note that purl=TRUE by default. For example, the following chunk would not be included in the script: ```{r purl=FALSE} library(palmerpenguins) penguins[1:2,] ``` Given that purl() will also extract any comments in chunk, it is encourage to annotate the code in the chunks as much as possible so that the script will be detailed for anyone wishing to use it that was not able to attend the workshop. 1.4 Figures and tables Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(penguins[, c(&quot;species&quot;, &quot;body_mass_g&quot;)]) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1 using \\@ref(fig:nice-fig). Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1 using \\@ref(tab:nice-tab). knitr::kable( head(penguins[ , 1:7], 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex Adelie Torgersen 39.1 18.7 181 3750 male Adelie Torgersen 39.5 17.4 186 3800 female Adelie Torgersen 40.3 18.0 195 3250 female Adelie Torgersen NA NA NA NA NA Adelie Torgersen 36.7 19.3 193 3450 female Adelie Torgersen 39.3 20.6 190 3650 male Adelie Torgersen 38.9 17.8 181 3625 female Adelie Torgersen 39.2 19.6 195 4675 male Adelie Torgersen 34.1 18.1 193 3475 NA Adelie Torgersen 42.0 20.2 190 4250 NA Adelie Torgersen 37.8 17.1 186 3300 NA Adelie Torgersen 37.8 17.3 180 3700 NA Adelie Torgersen 41.1 17.6 182 3200 female Adelie Torgersen 38.6 21.2 191 3800 male Adelie Torgersen 34.6 21.1 198 4400 male Adelie Torgersen 36.6 17.8 185 3700 female Adelie Torgersen 38.7 19.0 195 3450 female Adelie Torgersen 42.5 20.7 197 4500 male Adelie Torgersen 34.4 18.4 184 3325 female Adelie Torgersen 46.0 21.5 194 4200 male 1.5 Citations You can write citations, too. For example, we are using the bookdown package (Xie 2021) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). See Chapter 1.5 for more information on how to make citations. References "],["format.html", "Chapter 2 Special formatting 2.1 Formatting", " Chapter 2 Special formatting In development. 2.1 Formatting 2.1.1 Columns As in the presentations, we are also able to distribute content accross columns here. While we would do this in the presentations using .pull-right[] or .pull-left[], here we will have to use the HTML content division element, which is opened by &lt;div&gt; and closed by &lt;/div&gt;. There are current several different classes of content division that we implemented in this book and that we can specify by adding class to the content division element opener. For instance, to add the two-col class to &lt;div&gt;, we would do the following: &lt;div class = 'two-col'&gt;. Remember that we must always close the HTML &lt;div&gt; by including &lt;/div&gt; at the end of the content we wanted to divide; there is no need to include class when closing any HTML elements. We list below all examples of content dividers that can be used in this book. 2.1.1.1 The simplest two-column split: class two-col To equally divide the content across two equal-sized columns, we include it between &lt;div class = 'two-col'&gt; &lt;/div&gt;. Introduction à R Charger et manipuler des données Introduction à ggplot2 Modèles linéaires Programmation avec R Modèles linéaires généralisés Modèles generales et generalisées linéaires à effets mixtes Modèles additifs généralisés Analyses multivariées Analyses multivariées avancées As shown below: &lt;div class = &#39;two-col&#39;&gt; 1. Introduction à R 2. Charger et manipuler des données 3. Introduction à ggplot2 4. Modèles linéaires 5. Programmation avec R 6. Modèles linéaires généralisés 7. Modèles generales et generalisées linéaires à effets mixtes 8. Modèles additifs généralisés 9. Analyses multivariées 10. Analyses multivariées avancées &lt;/div&gt; 2.1.1.2 The simplest three-column split: class three-col To equally divide the content across two equal-sized columns, we include it between &lt;div class = 'three-col'&gt; &lt;/div&gt;. Introduction à R Charger et manipuler des données Introduction à ggplot2 Modèles linéaires Programmation avec R Modèles linéaires généralisés Modèles generales et generalisées linéaires à effets mixtes Modèles additifs généralisés Analyses multivariées Analyses multivariées avancées As shown below: &lt;div class = &#39;three-col&#39;&gt; 1. Introduction à R 2. Charger et manipuler des données 3. Introduction à ggplot2 4. Modèles linéaires 5. Programmation avec R 6. Modèles linéaires généralisés 7. Modèles generales et generalisées linéaires à effets mixtes 8. Modèles additifs généralisés 9. Analyses multivariées 10. Analyses multivariées avancées &lt;/div&gt; Unfortunately, the two-col and three-col classes are not ideal to split code and output across two distinct columns. See other options below. 2.1.1.3 More flexible split across two columns 2.1.1.3.1 Even two-column split: classes split, split-left, and split-right A more flexible way of splitting content across two columns is to use the split, split-left, and split-right classes. split will create a flex box layout-container and split-left and split-right can be used to add content to this layout. See an example of its usage below: This is the recommended option if you would like to split code and prose across two evenly-sized columns. Introduction to standard deviation Let us calculate the standard deviation for a population containing the values \\(1\\), \\(2\\), \\(3\\), \\(4\\), and \\(5\\). We can calculate the standard deviation using the sd() function in R, as shown below: sd(c(1, 2, 3, 4, 5)) Remember that the standard deviation can be calculated as: \\[\\sigma = \\sqrt{\\frac{\\sum\\limits_{i=1}^{n} \\left(x_{i} - \\bar{x}\\right)^{2}} {n-1}}\\] The output for the code on the left side is: ## [1] 1.581139 The above example has been generated using: &lt;div class = &quot;split&quot;&gt; &lt;div class = &quot;split-left&quot;&gt; **Introduction to standard deviation** Let us calculate the standard deviation for a population containing the values $1$, $2$, $3$, $4$, and $5$. In `R`, we could do the following: ```{r sd-example, echo = TRUE, results = &quot;hide&quot;} sd(c(1, 2, 3, 4, 5)) ``` &lt;/div&gt; &lt;div class = &quot;split-right&quot;&gt; Remember that the **standard deviation** can be calculated as: $$\\sigma = \\sqrt{\\frac{\\sum\\limits_{i=1}^{n} \\left(x_{i} - \\bar{x}\\right)^{2}} {n-1}}$$ The output for the code on the left side is: ```{r sd-example-output, echo = FALSE, ref.label=&#39;sd-example&#39;} ``` &lt;/div&gt; &lt;/div&gt; 2.1.1.3.2 Uneven two-column uneven-split: classes split, uneven-split-left, and uneven-split-right To use uneven columns, use the uneven-split-left, and uneven-split-right classes inside the split class.See an example of its usage below: Introduction to standard deviation Let us calculate the standard deviation for a population containing the values \\(1\\), \\(2\\), \\(3\\), \\(4\\), and \\(5\\). We can calculate the standard deviation using the sd() function in R, as shown below: sd(c(1, 2, 3, 4, 5)) Remember that the standard deviation can be calculated as: \\[\\sigma = \\sqrt{\\frac{\\sum\\limits_{i=1}^{n} \\left(x_{i} - \\bar{x}\\right)^{2}} {n-1}}\\] The output for the code on the left side is: ## [1] 1.581139 The above example has been generated using: &lt;div class = &quot;split&quot;&gt; &lt;div class = &quot;uneven-split-left&quot;&gt; **Introduction to standard deviation** Let us calculate the standard deviation for a population containing the values $1$, $2$, $3$, $4$, and $5$. In `R`, we could do the following: ```{r sd-example-2, echo = TRUE, results = &quot;hide&quot;} sd(c(1, 2, 3, 4, 5)) ``` &lt;/div&gt; &lt;div class = &quot;uneven-split-right&quot;&gt; Remember that the **standard deviation** can be calculated as: $$\\sigma = \\sqrt{\\frac{\\sum\\limits_{i=1}^{n} \\left(x_{i} - \\bar{x}\\right)^{2}} {n-1}}$$ The output for the code on the left side is: ```{r sd-example-output-2, echo = FALSE, ref.label=&#39;sd-example&#39;} ``` &lt;/div&gt; &lt;/div&gt; 2.1.2 Special notes and tips Standard Markdown notes can be obtained by typing &gt; at the beginning of the paragraph followed by space. For example, like this. Here, we can also use special note tips by writing ::: followed by one of the four class names available: puzzle, explanation, and noway. To make special explanation boxes, use explanation: You use a div tip by writing ::: following by the name that you assigned to it in the CSS after the div. To pose thoughtful questions to the readers, use puzzle: What is the spell that allows wizards to make objects levitate with the flick of their wand? To tell readers they must not do something, use noway: You may not begin function names in R with numbers. To show that you are not happy about something, use angry: Do not really use this. This is just a test. "],["structure.html", "Chapter 3 Workshop structure 3.1 Objective 3.2 The index.Rmd file 3.3 Additional Resources chapter Example", " Chapter 3 Workshop structure In development. 3.1 Objective We display here basic guidelines to help the transition from the QCBS wikipage towards the bookdown framework, as well as for the maintenance of the QCBS R Workshop Series. 3.1.0.1 Structure Following bookdown’s default options, headings will be automatically numbered. If you don’t like this, then you have to un-number them manually. Within any .Rmd you can do this if you: Add an {-} after each heading you want unnumbered. If your section has an ID within brackets already, just add the - in front, for example: Each section of the wiki for each workshop will become its own book chapter. Each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. The name of the Rmd files should follow this structure: XX-chapter_name.Rmd with XXbeing the number of the chapter. 3.2 The index.Rmd file In addition to the chapters, each book contains an index.Rmd file which will automatically be the first chapter of all books and which should contain links to the GitHub page and presentation for its respective workshop. Notice that this file has no number on its file name. When building the book, bookdown automatically uses the index.Rmdfile as the first chapter and then follows the numbering of the other files. Take this into account when naming your chapters as your 01-chapter_name.Rmd will actually be the second chapter and so on. 3.3 Additional Resources chapter The books should also contain a final chapter called XX-references.Rmd which will contain any citations that you used and can also contain any additional material and resources if participants wish to obtain more information on the subject. Please refer to Chapter 1.5 for more information on how create the content of this chapter. Example For example, the English version of the wiki for Workshop 1 has 8 sections. So the book would have a total of 10 Rmd files which include the index.Rmd file, 8 XX-chapter_name.Rmd files numbered 01 - 08, and the final 9-references.Rmdfile. "],["references-and-citations.html", "Chapter 4 References and citations 4.1 The BibTeX format 4.2 Creating a BibTeX database 4.3 Adding the BibTeX database 4.4 The XX-references.Rmd file", " Chapter 4 References and citations In development. We already covered the basics on how to insert an inline citation on Chapter 1. However, those examples only work for this book because they are the packages we are using to create the book. If we wanted to cite another package or a book, article, we first have to create the bibliography entries for them. 4.1 The BibTeX format Bookdown uses pandoc-citeproc for its html output. Many bibliography formats can be used by pandoc-citeproc, but BibTex is quite simple and relatively standard so we will use it for our books. Here is a basic example of a BibTex entry: @Book{abramowitz+stegun, author = &quot;Milton {Abramowitz} and Irene A. {Stegun}&quot;, title = &quot;Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables&quot;, publisher = &quot;Dover&quot;, year = 1964, address = &quot;New York City&quot;, edition = &quot;ninth Dover printing, tenth GPO printing&quot; } Now let’s see what the structure of the entry is: Each entry starts with a type (e.g. @Book{) such as article or book, among others. It is then followed by a citation-key (e.g. abramowitz+stegun,) which can be used to produce the inline citations. So if we wanted to cite our example book we would use @abramowitz+stegun to produce this citation: Abramowitz and Stegun (1964). Finally, the entry has multiple tags which give the characteristics of the entry (e.g. author, title, year, etc.) There are some required tags for each type of entry as well as some optional ones. You can find a list of the different types and the required and optional tags for each type here. 4.2 Creating a BibTeX database Now that we know the basics about BibTeX, we can apply it. For this, we have to create a BibTeX database which is a plain-text file with a .bib extension. For example, we created an example.bibfile so that we could use the Abramowitz and Stegun (1964) citation. The file name for the database of each workshop should be workshop-X-citations.bib. 4.2.1 R packages If you wish to cite any R packages, knitr contains the helper function write_bib() that automatically produces the BibTeX entries for the selected packages and creates a datbase for the packages. Here is an example that this template uses to produce citations such as this one for bookdown (Xie 2021): knitr::write_bib(c( .packages(), &#39;bookdown&#39;, &#39;knitr&#39;, &#39;rmarkdown&#39; ), &#39;packages.bib&#39;) 4.3 Adding the BibTeX database To include the database in the book, you must: Save the .bib file in the book-en or book-fr folder. Add the file name to the bibliography field in the YAML metadata section of the index.Rmd file. Multiple database files can be included. For example, the bibliography field of this template looks like this: bibliography: [packages.bib, example.bib] 4.4 The XX-references.Rmd file The basic format of this Rmd file should only contain the following expression: `r if (knitr::is_html_output()) &#39;# Additional resources {-}&#39;` ### References {-} This will output only the references we included in the main BibTeX database (i.e. the workshop-X-citations.bib file) and any packages we cited inside the book. Note that this will not include the rest of the package reference entries created by knitr if they were not cited inside the book. 4.4.1 Including other resources Most of the wikis for the QCBS R Workshop Series contain a section at the end where we offer additional resources for the participants interested in more information about the subject of the workshop. To include these into this last chapter of the book, you can add a new subsection after the basic expression showed above. In this book, we have included a link to the bookdown manual as an additional resource like this: `r if (knitr::is_html_output()) &#39; # Additional resources {-} &#39;` For more information on how to use bookdown, you can check the bookdown manual [here](https://bookdown.org/yihui/bookdown/). ### References {-} References "],["additional-resources.html", "Additional resources References", " Additional resources For more information on using bookdown, you can check the bookdown manual here. References "]]
